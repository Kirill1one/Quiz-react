[{"/Users/kirillkupriyanov/PROJECTS/Quiz/src/index.js":"1","/Users/kirillkupriyanov/PROJECTS/Quiz/src/App.js":"2"},{"size":234,"mtime":1655561996000,"results":"3","hashOfConfig":"4"},{"size":2143,"mtime":1684182347591,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"117n7uq",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/Users/kirillkupriyanov/PROJECTS/Quiz/src/index.js",[],[],"/Users/kirillkupriyanov/PROJECTS/Quiz/src/App.js",["13"],[],"import React from \"react\";\nimport \"./index.scss\";\n\nconst questions = [\n  {\n    title: \"React - это ... ?\",\n    variants: [\"библиотека\", \"фреймворк\", \"приложение\"],\n    correct: 0,\n  },\n  {\n    title: \"Компонент - это ... \",\n    variants: [\n      \"приложение\",\n      \"часть приложения или страницы\",\n      \"то, что я не знаю что такое\",\n    ],\n    correct: 1,\n  },\n  {\n    title: \"Что такое JSX?\",\n    variants: [\n      \"Это простой HTML\",\n      \"Это функция\",\n      \"Это тот же HTML, но с возможностью выполнять JS-код\",\n    ],\n    correct: 2,\n  },\n];\n\nfunction Result({ correct }) {\n  return (\n    <div className=\"result\">\n      <img src=\"https://cdn-icons-png.flaticon.com/512/2278/2278992.png\" />\n      <h2>\n        Вы отгадали {correct} ответа из {questions.length}\n      </h2>\n      <a href=\"/\">\n        <button>Попробовать снова</button>\n      </a>\n    </div>\n  );\n}\n\nfunction Game({ step, question, onClickVariant }) {\n  const percentage = Math.round((step / questions.length) * 100);\n\n  return (\n    <>\n      <div className=\"progress\">\n        <div\n          style={{ width: `${percentage}%` }}\n          className=\"progress__inner\"\n        ></div>\n      </div>\n      <h1>{question.title}</h1>\n      <ul>\n        {question.variants.map((text, index) => (\n          <li onClick={() => onClickVariant(index)} key={text}>\n            {text}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nfunction App() {\n  const [step, setStep] = React.useState(0);\n  const [correct, setCorrect] = React.useState(0);\n  const question = questions[step];\n\n  const onClickVariant = (index) => {\n    setStep(step + 1);\n    if (index === question.correct) {\n      setCorrect(correct + 1);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {step !== questions.length ? (\n        <Game step={step} question={question} onClickVariant={onClickVariant} />\n      ) : (\n        <Result correct={correct} />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":33,"column":7,"nodeType":"16","endLine":33,"endColumn":76},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]